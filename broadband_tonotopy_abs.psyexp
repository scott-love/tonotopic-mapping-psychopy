<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.2.4">
  <Settings>
    <Param val="4" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': '', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[2560, 1440]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="broad" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="sync">
      <TextComponent name="starttext">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="starttext" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press “s” to start" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp">
        <Param val="'s'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="play_tone">
      <CodeComponent name="code_Tones">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="count=0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="thisExp.addData('StartBeep',myClock.getTime())&amp;#10;&amp;#10;current_volumes=volumes[count]&amp;#10;current_tones=tones[count]&amp;#10;current_bands=bands[count]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if count==2904:&amp;#10;    count=0&amp;#10;else: count+=1&amp;#10;&amp;#10;&amp;#10;thisExp.addData('volume', current_volumes)&amp;#10;thisExp.addData('tones', current_tones)&amp;#10;thisExp.addData('band', current_bands)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_Tones" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <SoundComponent name="Tones">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="Tones" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$current_tones" valType="str" updates="set every repeat" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.025" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.075" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="current_volumes" valType="num" updates="set every repeat" name="volume"/>
      </SoundComponent>
    </Routine>
    <Routine name="setup">
      <CodeComponent name="code">
        <Param val="import random&amp;#10;import numpy as np" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="myClock = core.Clock() &amp;#10;&amp;#10;frequencies = np.arange(125,8000)&amp;#10;&amp;#10;dx = 4/7875&amp;#10;X  = np.arange(-2, 2, dx)&amp;#10;Y  = np.exp(-X ** 2)&amp;#10;Y /= (dx * Y).sum()&amp;#10;CY = np.cumsum(Y * dx)&amp;#10;CY = CY/sum(CY)&amp;#10;&amp;#10;band = ['low','high']&amp;#10;sband = np.repeat(&quot;silence&quot;,88)&amp;#10;hband = np.repeat(&quot;high&quot;,88)&amp;#10;lband = np.repeat(&quot;low&quot;,88)&amp;#10;svolume = np.ones(88)*0&amp;#10;lvolume = np.ones(88)*1&amp;#10;hvolume = np.ones(88)*1&amp;#10;&amp;#10;tones = np.ones(88)*100&amp;#10;bands = sband&amp;#10;volumes = svolume" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="tones = np.ones(88)*100&amp;#10;bands = sband&amp;#10;volumes = svolume&amp;#10;&amp;#10;for i in range (1,9):&amp;#10;  random.shuffle(band)&amp;#10;&amp;#10;  if band[0] == 'low':&amp;#10;    tones = np.hstack((tones, np.random.choice(frequencies,88,p=CY[::-1])))&amp;#10;    bands = np.hstack((bands,lband))&amp;#10;    volumes = np.hstack((volumes,lvolume))&amp;#10;    tones = np.hstack((tones, np.ones(88)*100))&amp;#10;    bands = np.hstack((bands,sband))&amp;#10;    volumes = np.hstack((volumes,svolume))&amp;#10;    tones = np.hstack((tones, np.random.choice(frequencies,88,p=CY)))&amp;#10;    bands = np.hstack((bands,hband))&amp;#10;    volumes = np.hstack((volumes,hvolume))&amp;#10;    tones = np.hstack((tones, np.ones(88)*100))&amp;#10;    bands = np.hstack((bands,sband))&amp;#10;    volumes = np.hstack((volumes,svolume))&amp;#10;  else:&amp;#10;    tones = np.hstack((tones, np.random.choice(frequencies,88,p=CY)))&amp;#10;    bands = np.hstack((bands,hband))&amp;#10;    volumes = np.hstack((volumes,hvolume))&amp;#10;    tones = np.hstack((tones, np.ones(88)*100))&amp;#10;    bands = np.hstack((bands,sband))&amp;#10;    volumes = np.hstack((volumes,svolume))&amp;#10;    tones = np.hstack((tones, np.random.choice(frequencies,88,p=CY[::-1])))&amp;#10;    bands = np.hstack((bands,lband))&amp;#10;    volumes = np.hstack((volumes,lvolume))&amp;#10;    tones = np.hstack((tones, np.ones(88)*100))&amp;#10;    bands = np.hstack((bands,sband))&amp;#10;    volumes = np.hstack((volumes,svolume))" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="for i in range (1,9):&amp;#10;  random.shuffle(band)&amp;#10;&amp;#10;  if band[0] == 'low':&amp;#10;    tones = np.hstack((tones, np.random.choice(frequencies,88,p=CY[::-1])))&amp;#10;    bands = np.hstack((bands,lband))&amp;#10;    volumes = np.hstack((volumes,lvolume))&amp;#10;    &amp;#10;    tones = np.hstack((tones, np.random.choice(frequencies,88,p=CY)))&amp;#10;    bands = np.hstack((bands,hband))&amp;#10;    volumes = np.hstack((volumes,hvolume))&amp;#10;    &amp;#10;    tones = np.hstack((tones, np.ones(88)*100))&amp;#10;    bands = np.hstack((bands,sband))&amp;#10;    volumes = np.hstack((volumes,svolume))&amp;#10;  else:&amp;#10;    tones = np.hstack((tones, np.random.choice(frequencies,88,p=CY)))&amp;#10;    bands = np.hstack((bands,hband))&amp;#10;    volumes = np.hstack((volumes,hvolume))&amp;#10;    &amp;#10;    tones = np.hstack((tones, np.random.choice(frequencies,88,p=CY[::-1])))&amp;#10;    bands = np.hstack((bands,lband))&amp;#10;    volumes = np.hstack((volumes,lvolume))&amp;#10;    &amp;#10;    tones = np.hstack((tones, np.ones(88)*100))&amp;#10;    bands = np.hstack((bands,sband))&amp;#10;    volumes = np.hstack((volumes,svolume))" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="#thisExp.addData('volume', volumes)&amp;#10;#thisExp.addData('tones', tones)&amp;#10;#thisExp.addData('band', bands)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="start_TR">
      <SoundComponent name="sound_1">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="sound_1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="A" valType="str" updates="constant" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="0" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="setup"/>
    <Routine name="sync"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="2200" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="play_tone"/>
    <LoopTerminator name="trials"/>
  </Flow>
</PsychoPy2experiment>
